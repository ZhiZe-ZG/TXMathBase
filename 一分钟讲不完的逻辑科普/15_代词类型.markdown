# 代词类型

**女也不爽，士贰其行。——《氓》**

在之前我们提到过，代词也分种类。有的代词一般指人（如“他”，“她”），有的代词则一般指动物或者无生命物体（如“它”）。在“女也不爽，士贰其行”这句诗中，“女”指代故事的女主角，而“士”指代男主角。不能用“女”来指代男主角，也不能用“士”来指代女主角，因为代词和被指代对象的类型对不上。在之前的命题逻辑部分，我们使用的“A”，“B”，“C”等实际上被我们约定为专门指代语句的代词。在命题逻辑中，由于我们基本上只需要指代命题，因而不说明它们的指代种类也不会造成混乱。但是在接下来的内容中，我们会涉及到指代其他种类事物的代词，这时候不区分类型就会造成混乱（例如出现一个“A”，你却不知道它表示一个语句，一个谓词，还是一个名词），因而需要把代词的类型明确地写出来。

## 表示语句的代词

我们对原先的证明过程稍加修改。当我们约定一个新的指代命题的代词时在其后加符号“::”然后写上表示语句的类型，然后再写定义。由于我们一直以来所说的语句实际上就是数理逻辑上的合式公式，我们用“公式”一词的英文“Formula”来表示这个类型。就像这样：

> A::Formula ::= “张三是个好人”

这样在以后使用代词“A”的时候如果弄不清楚它的类型就返回来看一眼。

## 说明代词替换

在我们约定的证明过程中，约定新的代词并不算步骤，因而没有步骤标号。在一个表示语句的代词和定义它的式子相互替换时，我们不做任何说明随意替换，例如：

> \# 前提
>
> [1] A
>
> \# 约定了一个语句代词B
>
> B::Formula  ::= ¬¬A
>
> \# 后边我们要证明B
>
> \# 思路上是先用D.N.证明¬¬A
>
> \# 然后把¬¬A按约定替换为B
>
> \# 但是现在我们之前不把这种代词替换当作证明步骤
>
> \# 所以省略所有和替换相关的内容，直接写结果
>
> [2] B (1, D.N.)

这样的证明过程如果不加注释有时候会让人读起来很费解。所以我们现在约定一种新的写法，把符号替换的过程也当作一个证明步骤。我们不给这种替换取M.T.，Simp.之类的名称，而是用“A|>B”来表示把一个语句中的符号A替换为符号B。当然了这里的A或B可以替换成一个由联词和语句代词组成的复句。刚刚举的例子现在就可以这样写：

> \# 前提
>
> [1] A
>
> \# 约定了一个语句代词B
>
> B::Formula  ::= ¬¬A
>
> \# 我们证明B
>
> \# 先证明¬¬A
>
> [2] ¬¬A (1, D.N.)
>
> \# 把2号句子中的¬¬A替换为B
>
> [3] B (2, ¬¬A|>B)

有几点需要提醒的：

1. 由于代词的替换现在算一个证明步骤，它也开始占用步骤编号。
1. 代词约定本身其实是一种数据定义，仍然不算步骤，只要在第一次使用前定义就可以。当然为了方便查看一般一开始就把要用的代词基本都定义好，或者在第一次使用代词之前定义它。
1. 我们也能把一个代词反向替换回定义它的式子。例如在例子中我们通过“B|>¬¬A”把B替换为¬¬A。
1. 在书写符号替换的时候要注意检查是否有可以依据的约定存在。没有明确写出约定的替换就不能进行。

## 表示名词和谓词

关于为什么要区分名词和谓词我们之前已经提到过。现在我们要明确谓词和代词是两个不同的类别，而且必须要有名词和谓词才能组成一个有意义的单句。我们可以用类似于约定指代语句的代词的符号，来约定指代名词的代词或指代谓词的代词。不过也需要说明类型。名词用Noun表示，谓词用Predicate表示。例如：

> \# 约定名词
>
> a1::Noun ::= “张三”
>
> a2::Noun ::= “李四”
>
> b::Noun ::= “地球”
>
> c::Noun ::= “打架”
>
> \# 约定谓词
>
> H::Predicate ::= “打架”
>
> I::Predicate ::= “游泳”
>
> J::Predicate ::= “是不好的”
>
> K::Predicate ::= “是红色的”
>
> L::Predicate ::= “是好人”

注意这几点：

1. 之前我们提到过代词可以由多个字母或数字组合而成，因而“a1”是一个代词。“a2”也是一个代词。
1. 代词c是名词性的表示“打架”这个动作本身，而不是表示谁和谁打架。指代谓词的代词H表示的则是一个谓词“打架”，表示主语在打架。

## 重写单句

之前我们直接用一个表示语句的代词来指代自然语言单句，不能表示其更细节的结构。就像这样：

> A::Formula ::= “张三是好人”

但现在约定了新的符号以后我们可以表示单句内部的结构。首先我们约定好所有用得着的表示谓词和名词的代词：

> a1::Noun ::= “张三”
>
> L::Predicate ::= “是好人”

然后我们将自然语言句子中的名词和谓词都换成我们替换好的代词（由于代词都是英文字母和数字组成，为了防止歧义，词与词之间要有空格），a1替换“张三”，L替换“是好人”，就得到“a1 L”。

考虑到一个句子中只会有一个谓语，但是可能有多个主语（包括宾语），我们把谓语的代词放到句子最前边。这就像把英文中的“I swim”变成了“swim I”。按照这个变换，我们把“张三是好人”写成了“L a1”。最后用括号括起来表示这是一个句子，就像这样“(L a1)”。

让我们再做一些练习，添加这些约定：

> a2::Noun ::= “李四”
>
> H::Predicate ::= “打架”
>
> M::Predicate ::= “喜欢”

这样的约定下“张三李四打架”可以写为“(H a1 a2)”，“张三喜欢李四”可以写为“(M a1 a2)”。注意这里的M不能当主语，因它是谓词类的，而不是名词类的。另外，你也可以再给这种符号化的句子约定代词：

> \# 由于我们有谓语M和主语a1，a2
>
> \# (M a1 a2)已经是个句子
>
> \# 所以要用Formula类型的代词来指代它
>
> A::Formula ::= (M a1 a2)

也可以用这样的句子组成复句，例如“张三喜欢李四并且张三李四打架了”可以写为：

> (M a1 a2)∧(H a1 a2)

也能用上我们之前的指代语句代词的替换：

> \# 前提
>
> [1] (M a1 a2)∧(H a1 a2)
>
> \# 约定指代语句的代词A
>
> A::Formula ::= (M a1 a2)
>
> \# 依据约定把1中的(M a1 a2)替换为A
>
> [2] A∧(H a1 a2) (1, (M a1 a2)|>A)
>
> \# 约定指代语句的代词B
>
> B::Formula ::= (H a1 a2)
>
> \# 依据约定把1中的(H a1 a2)替换为B
>
> [3] A∧B (2, (H a1 a2)|>B)

这里我们再次注意，约定了用A表示(M a1 a2)，那么A和(M a1 a2)表示的就是同一个句子，只不过符号不一样。

## 讨论

Copi的书中表示名词和谓词的方法与我们很不一样。如果H表示一个谓词，s表示一个名词，那么我们的语句(H s)用Copi的书中写法应该是Hs。Copi的这种写法看似更简洁，但是限制非常多。首先它要求谓词和名词都只能用一个字母表示，而我们一开始就放宽了这一限制。其次Copi的写法也不能表达有两个主语（一主一宾）的语句。虽然说借助一点数据结构可以绕开这个问题，但那就超出我们目前要讨论的范畴了。

另外有的书上在表示主谓单句的时候会采用“M(a1, a2)”之类的写法，这使得谓词看起来像个函数名，整个语句看起来像个函数调用表达式。但是一般来说我们是不把谓词理解为函数的，也不把语句看作函数的返回值。所以应当注意区别谓词和函数。当然了，如果想用函数的观点来看待谓词和语句也是可以的，此时可以把谓词看作以主词为参数，返回语句的函数或者以主词为参数返回真值的函数。不过这些内容就不在我们这个小小的逻辑科普中详细讨论了。
