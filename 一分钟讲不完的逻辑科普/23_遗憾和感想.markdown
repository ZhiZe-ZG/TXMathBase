# 遗憾和感想

**小狐汔济，濡其尾，无攸利。——《周易》**

在之前的章节中我们简要且不太严谨地介绍了一阶谓词逻辑和集合，算是给形式科学开了个头。由于能力、时间、心境、身体状态等方方面面的原因，有很多本想介绍但是没有介绍到的部分。这一期我们就来聊聊这些缺失的内容以及如何补足。

## 可用的形式化推理系统

逻辑其实也可以算一门实用性非常强的技术，从日常交流到学术研究，多多少少都会用到逻辑，但由于逻辑基础教育的缺失，很多时候我们意识不到，因而不能有意识地规范自己的逻辑推理过程。我最初写这个系列文章的目的就是整理一个可用的逻辑推理规则系统出来，方便读者日常的使用。但是由于太过贪心，没有把注意力仅仅放到逻辑上，而是探讨了很多近乎哲学的问题，这就大大分散了个人的经历。等到真正写形式化推理系统的时候感觉疲惫万分，不得不尽量压缩删减。这样最终的呈现出来的推理系统介绍，虽然大致勾勒出了一个框架，但距离实际可用似乎还有一些距离。

为了弥补这个缺憾，我计划在后续的其他文章中为读者推荐几本专门介绍形式逻辑基本规则的教课书，以此来补充这个系列文章的不足。不过，就我目前看过的资料中，贴近自然语言的推理系统往往不太重视代词类型，除了用字母大小写和字体略加区分以外，指代语句的代词、固定指代对象的名词、不定指代对象的变量、指代谓词的代词等傻傻分不清楚。而重视类型的那些，往往又涉及自动证明之类的话题，用来做个证明检查给人杀鸡用牛刀的感觉。关于这一点我目前还没有想到合适的解决方法，建议读者在读这些形式逻辑教程时，仿照编程语言中的类型声明给证明中所用的词汇也加上类型声明。

## 证明检查工具

我们学算术，不是为了笔算一切，而是为了理解其中思想，真正遇到复杂的算术计算时直接用计算器就好了。同样的道理，我们学形式逻辑，也不是说看证明的时候要一条一条人工检查，完全可以用自动证明检查工具。但是，目前我所知道的各种证明检查工具总有这样那样的问题，GNU计划的Aris年久失修，有卡顿和闪退问题；在线工具Natural deduction proof editor and checker又不支持保存和导入证明；Coq所实现的功能又远远超过了做一个简单的自然推理检查所需要的；Metamath的同名检查工具似乎又不支持自然推演的检查。

所以证明检查工具的缺憾，恐怕我还需要一些时间调查了解，寻找一个合适的方案。

## 数学和逻辑知识的严谨证明

理论上现在绝大多数数学和逻辑知识（主要是各种定理），都是能通过一阶形式逻辑证明的。但是数学形式化的道路却非常曲折。当你学了一些数理逻辑知识和编程语言之后，回头看数学书，常常会有一种最该形式化的内容形式化程度却相当低下的感觉。这其中有技术和研究上的困难但是更主要的问题是顽固者的守旧以及相关人力财力投入的缺乏。不过在搜索的时候我倒是找到了一个看上去很有潜力的数学定理和证明形式化的项目：

Metamath: <http://us.metamath.org/>

Metamath China Mirror:  <http://cn.metamath.org/index.html>

## 后续

至此为止，《一分钟讲不完的逻辑科普》算是告一段落了。之后我打算写一些读书笔记来继续数学和逻辑的学习。
